{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;AACuD;AACE;AACA;AACkB;;;AAE3E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAc;KAC1B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,kEAAc;KAC1B;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,oFAAoB;KAChC;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACfjB,MAAM,YAAY;IANzB;QAOE,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAAmC;QACjC,oEAKE;QACF,yEAAc;QAC0B,+DAAI;QAAA,4DAAO;QAAC,uEAAM;QAAA,8DAAG;QAAA,4DAAO;QAEpE,sEAAK;QAAA,yEAA2B;QAAA,4DAAM;QAGxC,yEAAiC;QACV,4EAA+B;QAAA,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdF;AAEF;AACT;AACgC;AACzB;AACS;AACN;AACA;AACkB;AAEnB;;;AAoBjD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAPJ;YACP,oEAAa;YACb,iEAAgB;YAChB,yFAAuB;YACvB,kEAAgB;YAChB,yEAAqB,EAAE;SACxB;mIAIU,SAAS,mBAhBlB,wDAAY;QACZ,wEAAgB;QAChB,kEAAc;QACd,kEAAc;QACd,oFAAoB,aAGpB,oEAAa;QACb,iEAAgB;QAChB,yFAAuB;QACvB,kEAAgB;;;;;;;;;;;;;;;;;;;;;AChBb,MAAM,oBAAoB;IAG/B,yBAAyB;IACzB,YAAoB,IAAsB,EAAU,KAAqB;QAArD,SAAI,GAAJ,IAAI,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAHzE,UAAK,GAAQ,EAAE,CAAC;QAId,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,8EAA8E;IAC9E,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;IACzE,CAAC;;wFAXU,oBAAoB;kHAApB,oBAAoB;QCVjC,yEAA4B;QAEpB,uDAAiB;QAAA,4DAAK;QAC1B,qEAAI;QACU,oEAAS;QAAA,4DAAS;QAAC,uDAAoB;QAAA,4DAAK;QACxD,qEAAI;QAAQ,mEAAO;QAAA,4DAAS;QAAC,wDAAiB;QAAA,4DAAK;QACnD,sEAAI;QACM,oEAAQ;QAAA,4DAAS;QACzB,wDAEF;QAAA,4DAAK;QAEL,sEAAI;QAAQ,kEAAM;QAAA,4DAAS;QAAC,wDAAiB;QAAA,4DAAK;QAClD,sEAAI;QAAQ,oEAAQ;QAAA,4DAAS;QAAC,wDAAmB;QAAA,4DAAK;QACtD,sEAAI;QAAQ,oEAAQ;QAAA,4DAAS;QAAC,wDAA8B;QAAA,4DAAK;QACjE,sEAAI;QACM,wEAAY;QAAA,4DAAS;QAAC,wDAChC;QAAA,4DAAK;QACL,sEAAI;QAAQ,+DAAG;QAAA,4DAAS;QAAC,wDAA4B;QAAA,4DAAK;;QAhBxD,0DAAiB;QAAjB,yFAAiB;QAEY,0DAAoB;QAApB,6FAAoB;QACtB,0DAAiB;QAAjB,0FAAiB;QAG5C,0DAEF;QAFE,gMAEF;QAE4B,0DAAiB;QAAjB,0FAAiB;QACf,0DAAmB;QAAnB,4FAAmB;QACnB,0DAA8B;QAA9B,uGAA8B;QAE5B,0DAChC;QADgC,+GAChC;QACyB,0DAA4B;QAA5B,qGAA4B;;;;;;;;;;;;;;;;;;;;ACZpD,MAAM,gBAAgB;IAC3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,6BAA6B;IAC7B,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;IACrE,CAAC;IACD,+BAA+B;IAC/B,OAAO,CAAC,MAAc;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,6CAA6C,GAAG,MAAM,CACvD,CAAC;IACJ,CAAC;IACD,6BAA6B;IAC7B,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;IACrE,CAAC;;gFAhBU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;IEHlB,qEAAgC;IAExB,uDAAgB;IAAA,4DAAK;IAEzB,oEAAG;IAAA,uDAAe;IAAA,4DAAI;;;IAFlB,0DAAgB;IAAhB,8EAAgB;IAEjB,0DAAe;IAAf,6EAAe;;ADKjB,MAAM,cAAc;IAGzB,YAAoB,IAAsB;QAAtB,SAAI,GAAJ,IAAI,CAAkB;QAF1C,WAAM,GAAQ,EAAE,CAAC;IAE4B,CAAC;IAE9C,8EAA8E;IAC9E,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC;;4EARU,cAAc;4GAAd,cAAc;QCV3B,yEAA4B;QAC1B,wGAMK;QACP,4DAAM;;QAPiB,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;;;;;;;ACMzB,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;8GAAhB,gBAAgB;QCP7B,yEAAqB;QAMT,sEAAU;QAAA,0EAAmC;QAAA,yEAAc;QAAA,4DAAO;QAIxE,qEAAI;QAGE,uEAAU;QAAA,2EAAmC;QAAA,mEAAO;QAAA,4DAAO;;;;;;;;;;;;;;;;;;;;;;;;;IEZrE,qEAAgC;IAEO,yEAAc;IAAA,4DAAO;IAExD,uEAAM;IAAA,uDAAe;IAAA,4DAAO;IAE5B,8DAMC;IAND,yEAMC;IACC,qEAA2D;IAC7D,4DAAM;;;IAbuB,0DAAuC;IAAvC,mHAAuC;IAG9D,0DAAe;IAAf,6EAAe;;ADIpB,MAAM,cAAc;IAIzB,YAAoB,IAAsB;QAAtB,SAAI,GAAJ,IAAI,CAAkB;QAH1C,wBAAwB;QACxB,WAAM,GAAQ,EAAE,CAAC;IAE4B,CAAC;IAC9C,8EAA8E;IAC9E,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACtE,CAAC;;4EARU,cAAc;4GAAd,cAAc;QCT3B,yEAA4B;QAC1B,wGAgBK;QACP,4DAAM;;QAjBiB,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;;;ACDhC,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/information/information.component.ts","./src/app/information/information.component.html","./src/app/my-service.service.ts","./src/app/posts/posts.component.ts","./src/app/posts/posts.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { InformationComponent } from './information/information.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n  },\n  {\n    path: 'posts',\n    component: PostsComponent,\n  },\n  {\n    path: 'information/:id',\n    component: InformationComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n  title = 'crocobet';\n}\n","<!-- Toolbar -->\r\n<div class=\"toolbar\" role=\"banner\">\r\n  <img\r\n    width=\"40\"\r\n    alt=\"Angular Logo\"\r\n    class=\"logo\"\r\n    src=\"assets/crocobet-logo.png\"\r\n  />\r\n  <div class=\"\">\r\n    <span style=\"color: #189541\" class=\"\">Task</span> <span>App</span>\r\n  </div>\r\n  <div><app-sidebar></app-sidebar></div>\r\n</div>\r\n\r\n<div class=\"content\" role=\"main\">\r\n  <div class=\"content\"><router-outlet></router-outlet></div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { UsersComponent } from './users/users.component';\nimport { InformationComponent } from './information/information.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    PostsComponent,\n    UsersComponent,\n    InformationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ButtonsModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MyServiceService } from '../my-service.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-information',\r\n  templateUrl: './information.component.html',\r\n  styleUrls: ['./information.component.scss'],\r\n})\r\nexport class InformationComponent implements OnInit {\r\n  user$: any = [];\r\n\r\n  //getting params from url\r\n  constructor(private data: MyServiceService, private route: ActivatedRoute) {\r\n    this.route.params.subscribe((params) => (this.user$ = params.id));\r\n  }\r\n\r\n  // Any code that is executed here will be executed when this component is used\r\n  ngOnInit() {\r\n    this.data.getUser(this.user$).subscribe((data) => (this.user$ = data));\r\n  }\r\n}\r\n","<div class=\"card-container\">\n  <a class=\"card\" rel=\"noopener\">\n    <h4>{{ user$.name }}:</h4>\n    <ul>\n      <li><strong>Username:</strong> {{ user$.username }}</li>\n      <li><strong>E-mail:</strong> {{ user$.email }}</li>\n      <li>\n        <strong>Address:</strong>\n        {{ user$.address.street }}-{{ user$.address.suite }}-\n        {{ user$.address.city }}-{{ user$.address.zipcode }}\n      </li>\n\n      <li><strong>Phone:</strong> {{ user$.phone }}</li>\n      <li><strong>Website:</strong> {{ user$.website }}</li>\n      <li><strong>Company:</strong> Name: {{ user$.company.name }}</li>\n      <li>\n        <strong>CatchPhrase:</strong> Name: {{ user$.company.catchPhrase }}\n      </li>\n      <li><strong>BS:</strong> Name: {{ user$.company.bs }}</li>\n    </ul>\n  </a>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyServiceService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Getting all users from API\r\n  getUsers() {\r\n    return this.http.get('https://jsonplaceholder.typicode.com/users');\r\n  }\r\n  // Getting users from API by Id\r\n  getUser(userId: string) {\r\n    return this.http.get(\r\n      'https://jsonplaceholder.typicode.com/users/' + userId\r\n    );\r\n  }\r\n  // Getting all posts from API\r\n  getPosts() {\r\n    return this.http.get('https://jsonplaceholder.typicode.com/posts');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MyServiceService } from '../my-service.service';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-posts',\r\n  templateUrl: './posts.component.html',\r\n  styleUrls: ['./posts.component.scss'],\r\n})\r\nexport class PostsComponent implements OnInit {\r\n  posts$: any = [];\r\n\r\n  constructor(private data: MyServiceService) {}\r\n\r\n  // Any code that is executed here will be executed when this component is used\r\n  ngOnInit() {\r\n    this.data.getPosts().subscribe((data) => (this.posts$ = data));\r\n  }\r\n}\r\n","<div class=\"card-container\">\n  <dt *ngFor=\"let post of posts$\">\n    <a class=\"card bg-purple\" rel=\"noopener\">\n      <h6>{{ post.title }}</h6>\n\n      <p>{{ post.body }}</p>\n    </a>\n  </dt>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav id=\"menu-outer\">\n  <div class=\"table\">\n    <ul id=\"horizontal-list\">\n      <li>\n        <a routerLink=\"\">\n          <button type=\"button\" class=\"btn btn-outline-success\">\n            U s e r s <span class=\"material-icons md-18\">account_circle</span>\n          </button></a\n        >\n      </li>\n      <li>\n        <a routerLink=\"posts\"\n          ><button type=\"button\" class=\"btn btn-outline-warning\">\n            P o s t s <span class=\"material-icons md-18\">article</span>\n          </button></a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\r\nimport { MyServiceService } from '../my-service.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss'],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  // returns Data from Api\r\n  users$: any = [];\r\n\r\n  constructor(private data: MyServiceService) {}\r\n  // Any code that is executed here will be executed when this component is used\r\n  ngOnInit() {\r\n    this.data.getUsers().subscribe((data: any) => (this.users$ = data));\r\n  }\r\n}\r\n","<div class=\"card-container\">\n  <dt *ngFor=\"let user of users$\">\n    <a class=\"card\" rel=\"noopener\" routerLink=\"/information/{{ user.id }}\">\n      <span class=\"material-icons md-18\">account_circle</span>\n\n      <span>{{ user.name }}</span>\n\n      <svg\n        class=\"material-icons\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" />\n      </svg>\n    </a>\n  </dt>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}